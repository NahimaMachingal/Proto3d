{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/sayfi/Desktop/proto-3d-model/frontend/pages/index.js"],"sourcesContent":["// frontend/components/ModelViewer.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\r\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\r\n\r\nconst ModelViewer = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xf0f0f0);\r\n\r\n    // Add helpers for debugging\r\n    const axesHelper = new THREE.AxesHelper(5);\r\n    scene.add(axesHelper);\r\n    \r\n    const gridHelper = new THREE.GridHelper(10, 10);\r\n    scene.add(gridHelper);\r\n\r\n    // Camera setup\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.z = 5;\r\n\r\n    // Renderer setup\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Add lights\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n    scene.add(ambientLight);\r\n\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(1, 1, 1);\r\n    scene.add(directionalLight);\r\n\r\n    // Orbit Controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.25;\r\n    controls.enableZoom = true;\r\n    controls.update();\r\n\r\n    // Load the model with texture directly\r\n    const objLoader = new OBJLoader();\r\n    objLoader.load('/capsule.obj', (obj) => {\r\n      console.log('OBJ loaded successfully');\r\n      \r\n      // Apply a texture directly instead of using MTL\r\n      const textureLoader = new THREE.TextureLoader();\r\n      textureLoader.load('/capsule0.jpg', \r\n        (texture) => {\r\n          console.log('Texture loaded successfully');\r\n          \r\n          // Apply texture to all meshes in the object\r\n          obj.traverse((child) => {\r\n            if (child instanceof THREE.Mesh) {\r\n              child.material = new THREE.MeshStandardMaterial({ \r\n                map: texture,\r\n                roughness: 0.7,\r\n                metalness: 0.0\r\n              });\r\n            }\r\n          });\r\n          \r\n          // Center the model\r\n          const box = new THREE.Box3().setFromObject(obj);\r\n          const center = box.getCenter(new THREE.Vector3());\r\n          obj.position.sub(center);\r\n          \r\n          // Scale the model if needed\r\n          // obj.scale.set(0.1, 0.1, 0.1); // Uncomment and adjust if model is too large/small\r\n          \r\n          // Add the model to the scene\r\n          scene.add(obj);\r\n          console.log('Model added to scene');\r\n          \r\n          // Adjust camera to see the whole model\r\n          const size = box.getSize(new THREE.Vector3());\r\n          const maxDim = Math.max(size.x, size.y, size.z);\r\n          camera.position.z = maxDim * 2;\r\n          controls.update();\r\n        },\r\n        undefined,\r\n        (error) => {\r\n          console.error('Error loading texture:', error);\r\n        }\r\n      );\r\n    }, \r\n    (xhr) => {\r\n      console.log((xhr.loaded / xhr.total) * 100 + '% loaded');\r\n    },\r\n    (error) => {\r\n      console.error('Error loading model:', error);\r\n    });\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = mountRef.current.clientWidth / mountRef.current.clientHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(mountRef.current.clientWidth, mountRef.current.clientHeight);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      if (mountRef.current && renderer.domElement) {\r\n        mountRef.current.removeChild(renderer.domElement);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} style={{ width: '100%', height: '100%' }} />;\r\n};\r\n\r\nexport default ModelViewer;"],"names":[],"mappings":"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","debugId":null}}]
}